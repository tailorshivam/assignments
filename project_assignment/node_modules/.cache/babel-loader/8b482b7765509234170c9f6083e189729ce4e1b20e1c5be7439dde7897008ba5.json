{"ast":null,"code":"var _jsxFileName = \"D:\\\\VisualProject\\\\ReactProjects\\\\assignments\\\\project_assignment\\\\src\\\\pages\\\\Reports.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFinance } from \"../context/FinanceContext\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reports = () => {\n  _s();\n  const {\n    transactions,\n    budgets\n  } = useFinance();\n\n  // Monthly spending trends - Chart data\n  const getMonthlySpendingData = () => {\n    const monthlyData = [];\n    for (let i = 0; i < 12; i++) {\n      const month = new Date();\n      month.setMonth(i);\n      const monthName = month.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n      const totalSpent = transactions.filter(t => new Date(t.date).getMonth() === i).reduce((acc, curr) => acc + parseFloat(curr.amount), 0);\n      monthlyData.push({\n        month: monthName,\n        totalSpent\n      });\n    }\n    return monthlyData;\n  };\n\n  // Category-wise expense breakdown\n  const getCategoryWiseData = () => {\n    const categoryData = [];\n    const categories = [\"Groceries\", \"Salary\", \"Rent\", \"Utilities\", \"Entertainment\", \"Transportation\", \"Others\"];\n    categories.forEach(category => {\n      const totalSpent = transactions.filter(t => t.category === category).reduce((acc, curr) => acc + parseFloat(curr.amount), 0);\n      categoryData.push({\n        name: category,\n        value: totalSpent\n      });\n    });\n    return categoryData;\n  };\n\n  // Total income and expense summary\n  const totalIncome = transactions.filter(t => t.type === \"income\").reduce((acc, curr) => acc + parseFloat(curr.amount), 0);\n  const totalExpense = transactions.filter(t => t.type === \"expense\").reduce((acc, curr) => acc + parseFloat(curr.amount), 0);\n  const savings = totalIncome - totalExpense;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Total Income, Expenses, and Savings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Income: $\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Expenses: $\", totalExpense]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Savings: $\", savings]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Monthly Spending Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: getMonthlySpendingData(),\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"totalSpent\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Category-wise Expense Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: getCategoryWiseData(),\n            dataKey: \"value\",\n            nameKey: \"name\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 150,\n            fill: \"#8884d8\",\n            label: true,\n            children: getCategoryWiseData().map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: entry.value > 100 ? \"#82ca9d\" : \"#8884d8\"\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Financial Summary (Monthly)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Savings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: getMonthlySpendingData().map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.totalSpent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.totalSpent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: totalIncome - totalExpense\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"N393lEaeswcmmBP5nruqgctAp8Y=\", false, function () {\n  return [useFinance];\n});\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useFinance","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","PieChart","Pie","Cell","jsxDEV","_jsxDEV","Reports","_s","transactions","budgets","getMonthlySpendingData","monthlyData","i","month","Date","setMonth","monthName","toLocaleString","totalSpent","filter","t","date","getMonth","reduce","acc","curr","parseFloat","amount","push","getCategoryWiseData","categoryData","categories","forEach","category","name","value","totalIncome","type","totalExpense","savings","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","data","strokeDasharray","dataKey","stroke","nameKey","cx","cy","outerRadius","fill","label","map","entry","index","_c","$RefreshReg$"],"sources":["D:/VisualProject/ReactProjects/assignments/project_assignment/src/pages/Reports.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFinance } from \"../context/FinanceContext\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { PieChart, Pie, Cell } from \"recharts\";\r\n\r\nconst Reports = () => {\r\n  const { transactions, budgets } = useFinance();\r\n\r\n  // Monthly spending trends - Chart data\r\n  const getMonthlySpendingData = () => {\r\n    const monthlyData = [];\r\n    for (let i = 0; i < 12; i++) {\r\n      const month = new Date();\r\n      month.setMonth(i);\r\n      const monthName = month.toLocaleString(\"default\", { month: \"long\" });\r\n      const totalSpent = transactions\r\n        .filter((t) => new Date(t.date).getMonth() === i)\r\n        .reduce((acc, curr) => acc + parseFloat(curr.amount), 0);\r\n      monthlyData.push({ month: monthName, totalSpent });\r\n    }\r\n    return monthlyData;\r\n  };\r\n\r\n  // Category-wise expense breakdown\r\n  const getCategoryWiseData = () => {\r\n    const categoryData = [];\r\n    const categories = [\r\n      \"Groceries\",\r\n      \"Salary\",\r\n      \"Rent\",\r\n      \"Utilities\",\r\n      \"Entertainment\",\r\n      \"Transportation\",\r\n      \"Others\",\r\n    ];\r\n\r\n    categories.forEach((category) => {\r\n      const totalSpent = transactions\r\n        .filter((t) => t.category === category)\r\n        .reduce((acc, curr) => acc + parseFloat(curr.amount), 0);\r\n      categoryData.push({ name: category, value: totalSpent });\r\n    });\r\n    return categoryData;\r\n  };\r\n\r\n  // Total income and expense summary\r\n  const totalIncome = transactions\r\n    .filter((t) => t.type === \"income\")\r\n    .reduce((acc, curr) => acc + parseFloat(curr.amount), 0);\r\n  const totalExpense = transactions\r\n    .filter((t) => t.type === \"expense\")\r\n    .reduce((acc, curr) => acc + parseFloat(curr.amount), 0);\r\n  const savings = totalIncome - totalExpense;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Reports</h2>\r\n\r\n      <div className=\"mb-4\">\r\n        <h5>Total Income, Expenses, and Savings</h5>\r\n        <p>Total Income: ${totalIncome}</p>\r\n        <p>Total Expenses: ${totalExpense}</p>\r\n        <p>Savings: ${savings}</p>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <h5>Monthly Spending Trends</h5>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <LineChart data={getMonthlySpendingData()}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"month\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"totalSpent\" stroke=\"#8884d8\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <h5>Category-wise Expense Breakdown</h5>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <PieChart>\r\n            <Pie\r\n              data={getCategoryWiseData()}\r\n              dataKey=\"value\"\r\n              nameKey=\"name\"\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              outerRadius={150}\r\n              fill=\"#8884d8\"\r\n              label\r\n            >\r\n              {getCategoryWiseData().map((entry, index) => (\r\n                <Cell\r\n                  key={`cell-${index}`}\r\n                  fill={entry.value > 100 ? \"#82ca9d\" : \"#8884d8\"}\r\n                />\r\n              ))}\r\n            </Pie>\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <h5>Financial Summary (Monthly)</h5>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Month</th>\r\n              <th>Income</th>\r\n              <th>Expense</th>\r\n              <th>Savings</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {getMonthlySpendingData().map((data, index) => (\r\n              <tr key={index}>\r\n                <td>{data.month}</td>\r\n                <td>{data.totalSpent}</td>\r\n                <td>{data.totalSpent}</td>\r\n                <td>{totalIncome - totalExpense}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}