{"ast":null,"code":"var _jsxFileName = \"D:\\\\VisualProject\\\\ReactProjects\\\\assignments\\\\project_assignment\\\\src\\\\context\\\\FinanceContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { getFromStorage, saveToStorage } from \"../utils/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinanceContext = /*#__PURE__*/createContext();\nexport const useFinance = () => {\n  _s();\n  return useContext(FinanceContext);\n};\n_s(useFinance, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const FinanceProvider = ({\n  children\n}) => {\n  _s2();\n  const [budgets, setBudgets] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  const [currency, setCurrency] = useState(\"USD\");\n  useEffect(() => {\n    const storedTransactions = getFromStorage(\"transactions\") || [];\n    setTransactions(storedTransactions);\n  }, []);\n  useEffect(() => {\n    saveToStorage(\"transactions\", transactions);\n  }, [transactions]);\n  const addTransaction = transaction => {\n    const newTransaction = {\n      ...transaction,\n      id: Date.now()\n    };\n    setTransactions([...transactions, newTransaction]);\n  };\n  const deleteTransaction = id => {\n    setTransactions(transactions.filter(t => t.id !== id));\n  };\n  const updateTransaction = updated => {\n    setTransactions(transactions.map(t => t.id === updated.id ? updated : t));\n  };\n  return /*#__PURE__*/_jsxDEV(FinanceContext.Provider, {\n    value: {\n      budgets,\n      setBudgets,\n      transactions,\n      setTransactions,\n      addTransaction,\n      deleteTransaction,\n      updateTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s2(FinanceProvider, \"UR1fB6OYOYLs8+gKjaz0hbZ1xGc=\");\n_c = FinanceProvider;\nvar _c;\n$RefreshReg$(_c, \"FinanceProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","getFromStorage","saveToStorage","jsxDEV","_jsxDEV","FinanceContext","useFinance","_s","FinanceProvider","children","_s2","budgets","setBudgets","transactions","setTransactions","currency","setCurrency","storedTransactions","addTransaction","transaction","newTransaction","id","Date","now","deleteTransaction","filter","t","updateTransaction","updated","map","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/VisualProject/ReactProjects/assignments/project_assignment/src/context/FinanceContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { getFromStorage, saveToStorage } from \"../utils/storage\";\r\n\r\nconst FinanceContext = createContext();\r\n\r\nexport const useFinance = () => useContext(FinanceContext);\r\n\r\nexport const FinanceProvider = ({ children }) => {\r\n  const [budgets, setBudgets] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [currency, setCurrency] = useState(\"USD\");\r\n\r\n  useEffect(() => {\r\n    const storedTransactions = getFromStorage(\"transactions\") || [];\r\n    setTransactions(storedTransactions);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveToStorage(\"transactions\", transactions);\r\n  }, [transactions]);\r\n\r\n  const addTransaction = (transaction) => {\r\n    const newTransaction = {\r\n      ...transaction,\r\n      id: Date.now(),\r\n    };\r\n    setTransactions([...transactions, newTransaction]);\r\n  };\r\n\r\n  const deleteTransaction = (id) => {\r\n    setTransactions(transactions.filter((t) => t.id !== id));\r\n  };\r\n\r\n  const updateTransaction = (updated) => {\r\n    setTransactions(\r\n      transactions.map((t) => (t.id === updated.id ? updated : t))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <FinanceContext.Provider\r\n      value={{\r\n        budgets,\r\n        setBudgets,\r\n        transactions,\r\n        setTransactions,\r\n        addTransaction,\r\n        deleteTransaction,\r\n        updateTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </FinanceContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,cAAc,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,cAAc,gBAAGR,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMS,UAAU,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,UAAU,CAACO,cAAc,CAAC;AAAA;AAACE,EAAA,CAA9CD,UAAU;AAEvB,OAAO,MAAME,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMiB,kBAAkB,GAAGhB,cAAc,CAAC,cAAc,CAAC,IAAI,EAAE;IAC/Da,eAAe,CAACG,kBAAkB,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACdE,aAAa,CAAC,cAAc,EAAEW,YAAY,CAAC;EAC7C,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMK,cAAc,GAAIC,WAAW,IAAK;IACtC,MAAMC,cAAc,GAAG;MACrB,GAAGD,WAAW;MACdE,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IACf,CAAC;IACDT,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEO,cAAc,CAAC,CAAC;EACpD,CAAC;EAED,MAAMI,iBAAiB,GAAIH,EAAE,IAAK;IAChCP,eAAe,CAACD,YAAY,CAACY,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACL,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMM,iBAAiB,GAAIC,OAAO,IAAK;IACrCd,eAAe,CACbD,YAAY,CAACgB,GAAG,CAAEH,CAAC,IAAMA,CAAC,CAACL,EAAE,KAAKO,OAAO,CAACP,EAAE,GAAGO,OAAO,GAAGF,CAAE,CAC7D,CAAC;EACH,CAAC;EAED,oBACEtB,OAAA,CAACC,cAAc,CAACyB,QAAQ;IACtBC,KAAK,EAAE;MACLpB,OAAO;MACPC,UAAU;MACVC,YAAY;MACZC,eAAe;MACfI,cAAc;MACdM,iBAAiB;MACjBG;IACF,CAAE;IAAAlB,QAAA,EAEDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACzB,GAAA,CA/CWF,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}