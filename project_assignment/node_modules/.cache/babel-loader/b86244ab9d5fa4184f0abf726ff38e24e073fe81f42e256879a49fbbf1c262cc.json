{"ast":null,"code":"var _jsxFileName = \"D:\\\\VisualProject\\\\ReactProjects\\\\assignments\\\\project_assignment\\\\src\\\\pages\\\\EditTransaction.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useFinance } from \"../context/FinanceContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTransaction = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get transaction id from URL\n  const {\n    transactions,\n    setTransactions\n  } = useFinance();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    type: \"income\",\n    amount: \"\",\n    category: \"\",\n    description: \"\",\n    date: \"\"\n  });\n  useEffect(() => {\n    console.log(\"Transactions:\", transactions); // Log the current transactions\n    console.log(\"Editing ID:\", id); // Log the ID being passed via URL\n\n    // Find the transaction to edit by matching the ID\n    const transactionToEdit = transactions.find(t => t.id === id);\n    if (transactionToEdit) {\n      console.log(\"Transaction to Edit:\", transactionToEdit); // Log the transaction found\n      setFormData({\n        type: transactionToEdit.type,\n        amount: transactionToEdit.amount,\n        category: transactionToEdit.category,\n        description: transactionToEdit.description || \"\",\n        // Handle optional description\n        date: transactionToEdit.date\n      });\n    } else {\n      console.error(\"Transaction not found for ID:\", id); // Log error if transaction is not found\n    }\n  }, [id, transactions]); // Re-run the effect when ID or transactions change\n\n  // Handle changes to form fields\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission to update transaction\n  const handleUpdate = () => {\n    const updatedTransactions = transactions.map(t => t.id === id ? {\n      ...formData,\n      id\n    } : t);\n    setTransactions(updatedTransactions);\n    localStorage.setItem(\"transactions\", JSON.stringify(updatedTransactions));\n    alert(\"Transaction updated!\");\n    navigate(\"/transaction-history\");\n  };\n\n  // Debug: log the form data to check if it is being updated correctly\n  console.log(\"Form Data State:\", formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Transaction Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"type\",\n          className: \"form-control\",\n          value: formData.type,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"income\",\n            children: \"Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"expense\",\n            children: \"Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          className: \"form-control\",\n          value: formData.amount,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          className: \"form-control\",\n          value: formData.category,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          className: \"form-control\",\n          value: formData.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          className: \"form-control\",\n          value: formData.date,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success mt-3\",\n        onClick: handleUpdate,\n        children: \"Update Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(EditTransaction, \"C6awItu3FdY3xD5oQLsQxGtRdu4=\", false, function () {\n  return [useParams, useFinance, useNavigate];\n});\n_c = EditTransaction;\nexport default EditTransaction;\nvar _c;\n$RefreshReg$(_c, \"EditTransaction\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useFinance","jsxDEV","_jsxDEV","EditTransaction","_s","id","transactions","setTransactions","navigate","formData","setFormData","type","amount","category","description","date","console","log","transactionToEdit","find","t","error","handleChange","e","name","value","target","prev","handleUpdate","updatedTransactions","map","localStorage","setItem","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","required","onClick","_c","$RefreshReg$"],"sources":["D:/VisualProject/ReactProjects/assignments/project_assignment/src/pages/EditTransaction.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useFinance } from \"../context/FinanceContext\";\r\n\r\nconst EditTransaction = () => {\r\n  const { id } = useParams();  // Get transaction id from URL\r\n  const { transactions, setTransactions } = useFinance();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    type: \"income\",\r\n    amount: \"\",\r\n    category: \"\",\r\n    description: \"\",\r\n    date: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"Transactions:\", transactions); // Log the current transactions\r\n    console.log(\"Editing ID:\", id); // Log the ID being passed via URL\r\n\r\n    // Find the transaction to edit by matching the ID\r\n    const transactionToEdit = transactions.find((t) => t.id === id);\r\n\r\n    if (transactionToEdit) {\r\n      console.log(\"Transaction to Edit:\", transactionToEdit); // Log the transaction found\r\n      setFormData({\r\n        type: transactionToEdit.type,\r\n        amount: transactionToEdit.amount,\r\n        category: transactionToEdit.category,\r\n        description: transactionToEdit.description || \"\",  // Handle optional description\r\n        date: transactionToEdit.date\r\n      });\r\n    } else {\r\n      console.error(\"Transaction not found for ID:\", id); // Log error if transaction is not found\r\n    }\r\n  }, [id, transactions]); // Re-run the effect when ID or transactions change\r\n\r\n  // Handle changes to form fields\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Handle form submission to update transaction\r\n  const handleUpdate = () => {\r\n    const updatedTransactions = transactions.map((t) =>\r\n      t.id === id ? { ...formData, id } : t\r\n    );\r\n    setTransactions(updatedTransactions);\r\n    localStorage.setItem(\"transactions\", JSON.stringify(updatedTransactions));\r\n    alert(\"Transaction updated!\");\r\n    navigate(\"/transaction-history\");\r\n  };\r\n\r\n  // Debug: log the form data to check if it is being updated correctly\r\n  console.log(\"Form Data State:\", formData);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Transaction</h2>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label>Transaction Type</label>\r\n          <select\r\n            name=\"type\"\r\n            className=\"form-control\"\r\n            value={formData.type}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"income\">Income</option>\r\n            <option value=\"expense\">Expense</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            className=\"form-control\"\r\n            value={formData.amount}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Category</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"category\"\r\n            className=\"form-control\"\r\n            value={formData.category}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Description (optional)</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            className=\"form-control\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            className=\"form-control\"\r\n            value={formData.date}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success mt-3\"\r\n          onClick={handleUpdate}\r\n        >\r\n          Update Transaction\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTransaction;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,UAAU,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAE;EAC7B,MAAM;IAAEQ,YAAY;IAAEC;EAAgB,CAAC,GAAGP,UAAU,CAAC,CAAC;EACtD,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IACvCc,IAAI,EAAE,QAAQ;IACdC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE;EACR,CAAC,CAAC;EAEFnB,SAAS,CAAC,MAAM;IACdoB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEX,YAAY,CAAC,CAAC,CAAC;IAC5CU,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEZ,EAAE,CAAC,CAAC,CAAC;;IAEhC;IACA,MAAMa,iBAAiB,GAAGZ,YAAY,CAACa,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKA,EAAE,CAAC;IAE/D,IAAIa,iBAAiB,EAAE;MACrBF,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,iBAAiB,CAAC,CAAC,CAAC;MACxDR,WAAW,CAAC;QACVC,IAAI,EAAEO,iBAAiB,CAACP,IAAI;QAC5BC,MAAM,EAAEM,iBAAiB,CAACN,MAAM;QAChCC,QAAQ,EAAEK,iBAAiB,CAACL,QAAQ;QACpCC,WAAW,EAAEI,iBAAiB,CAACJ,WAAW,IAAI,EAAE;QAAG;QACnDC,IAAI,EAAEG,iBAAiB,CAACH;MAC1B,CAAC,CAAC;IACJ,CAAC,MAAM;MACLC,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEhB,EAAE,CAAC,CAAC,CAAC;IACtD;EACF,CAAC,EAAE,CAACA,EAAE,EAAEC,YAAY,CAAC,CAAC,CAAC,CAAC;;EAExB;EACA,MAAMgB,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChChB,WAAW,CAAEiB,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACrD,CAAC;;EAED;EACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,mBAAmB,GAAGvB,YAAY,CAACwB,GAAG,CAAEV,CAAC,IAC7CA,CAAC,CAACf,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGI,QAAQ;MAAEJ;IAAG,CAAC,GAAGe,CACtC,CAAC;IACDb,eAAe,CAACsB,mBAAmB,CAAC;IACpCE,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACL,mBAAmB,CAAC,CAAC;IACzEM,KAAK,CAAC,sBAAsB,CAAC;IAC7B3B,QAAQ,CAAC,sBAAsB,CAAC;EAClC,CAAC;;EAED;EACAQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAER,QAAQ,CAAC;EAEzC,oBACEP,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAAkC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAKuC,SAAS,EAAC,YAAY;QAAAL,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/BtC,OAAA;UACEsB,IAAI,EAAC,MAAM;UACXiB,SAAS,EAAC,cAAc;UACxBhB,KAAK,EAAEhB,QAAQ,CAACE,IAAK;UACrB+B,QAAQ,EAAEpB,YAAa;UAAAc,QAAA,gBAEvBlC,OAAA;YAAQuB,KAAK,EAAC,QAAQ;YAAAW,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCtC,OAAA;YAAQuB,KAAK,EAAC,SAAS;YAAAW,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENtC,OAAA;QAAKuC,SAAS,EAAC,YAAY;QAAAL,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBtC,OAAA;UACES,IAAI,EAAC,QAAQ;UACba,IAAI,EAAC,QAAQ;UACbiB,SAAS,EAAC,cAAc;UACxBhB,KAAK,EAAEhB,QAAQ,CAACG,MAAO;UACvB8B,QAAQ,EAAEpB,YAAa;UACvBqB,QAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENtC,OAAA;QAAKuC,SAAS,EAAC,YAAY;QAAAL,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBtC,OAAA;UACES,IAAI,EAAC,MAAM;UACXa,IAAI,EAAC,UAAU;UACfiB,SAAS,EAAC,cAAc;UACxBhB,KAAK,EAAEhB,QAAQ,CAACI,QAAS;UACzB6B,QAAQ,EAAEpB,YAAa;UACvBqB,QAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENtC,OAAA;QAAKuC,SAAS,EAAC,YAAY;QAAAL,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrCtC,OAAA;UACES,IAAI,EAAC,MAAM;UACXa,IAAI,EAAC,aAAa;UAClBiB,SAAS,EAAC,cAAc;UACxBhB,KAAK,EAAEhB,QAAQ,CAACK,WAAY;UAC5B4B,QAAQ,EAAEpB;QAAa;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENtC,OAAA;QAAKuC,SAAS,EAAC,YAAY;QAAAL,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBtC,OAAA;UACES,IAAI,EAAC,MAAM;UACXa,IAAI,EAAC,MAAM;UACXiB,SAAS,EAAC,cAAc;UACxBhB,KAAK,EAAEhB,QAAQ,CAACM,IAAK;UACrB2B,QAAQ,EAAEpB,YAAa;UACvBqB,QAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENtC,OAAA;QACES,IAAI,EAAC,QAAQ;QACb8B,SAAS,EAAC,sBAAsB;QAChCG,OAAO,EAAEhB,YAAa;QAAAQ,QAAA,EACvB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACpC,EAAA,CAhIID,eAAe;EAAA,QACJL,SAAS,EACkBE,UAAU,EACnCD,WAAW;AAAA;AAAA8C,EAAA,GAHxB1C,eAAe;AAkIrB,eAAeA,eAAe;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}