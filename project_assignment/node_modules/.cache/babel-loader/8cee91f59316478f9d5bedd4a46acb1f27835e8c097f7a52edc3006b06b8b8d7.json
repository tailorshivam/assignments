{"ast":null,"code":"var _jsxFileName = \"D:\\\\VisualProject\\\\ReactProjects\\\\assignments\\\\project_assignment\\\\src\\\\context\\\\FinanceContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { createContext, useContext, useState, useEffect } from \"react\";\n// import { getFromStorage, saveToStorage } from \"../utils/storage\";\n\n// const FinanceContext = createContext();\n\n// export const useFinance = () => useContext(FinanceContext);\n\n// export const FinanceProvider = ({ children }) => {\n//   const [transactions, setTransactions] = useState([]);\n\n//   useEffect(() => {\n//     const storedTransactions = getFromStorage(\"transactions\") || [];\n//     setTransactions(storedTransactions);\n//   }, []);\n\n//   useEffect(() => {\n//     saveToStorage(\"transactions\", transactions);\n//   }, [transactions]);\n\n//   const addTransaction = (transaction) => {\n//     setTransactions([...transactions, transaction]);\n//   };\n\n//   const deleteTransaction = (id) => {\n//     setTransactions(transactions.filter((t) => t.id !== id));\n//   };\n\n//   const updateTransaction = (updated) => {\n//     setTransactions(\n//       transactions.map((t) => (t.id === updated.id ? updated : t))\n//     );\n//   };\n\n//   return (\n//     <FinanceContext.Provider\n//       value={{\n//         transactions,\n//         addTransaction,\n//         deleteTransaction,\n//         updateTransaction,\n//       }}\n//     >\n//       {children}\n//     </FinanceContext.Provider>\n//   );\n// };\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create a context for finance data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinanceContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const FinanceProvider = ({\n  children\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    const storedTransactions = localStorage.getItem('transactions');\n    if (storedTransactions) {\n      setTransactions(JSON.parse(storedTransactions));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FinanceContext.Provider, {\n    value: {\n      transactions,\n      setTransactions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the FinanceContext\n_s(FinanceProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = FinanceProvider;\nexport const useFinance = () => {\n  _s2();\n  return useContext(FinanceContext);\n};\n_s2(useFinance, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"FinanceProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","FinanceContext","FinanceProvider","children","_s","transactions","setTransactions","storedTransactions","localStorage","getItem","JSON","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFinance","_s2","$RefreshReg$"],"sources":["D:/VisualProject/ReactProjects/assignments/project_assignment/src/context/FinanceContext.js"],"sourcesContent":["// import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n// import { getFromStorage, saveToStorage } from \"../utils/storage\";\r\n\r\n// const FinanceContext = createContext();\r\n\r\n// export const useFinance = () => useContext(FinanceContext);\r\n\r\n// export const FinanceProvider = ({ children }) => {\r\n//   const [transactions, setTransactions] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const storedTransactions = getFromStorage(\"transactions\") || [];\r\n//     setTransactions(storedTransactions);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     saveToStorage(\"transactions\", transactions);\r\n//   }, [transactions]);\r\n\r\n//   const addTransaction = (transaction) => {\r\n//     setTransactions([...transactions, transaction]);\r\n//   };\r\n\r\n//   const deleteTransaction = (id) => {\r\n//     setTransactions(transactions.filter((t) => t.id !== id));\r\n//   };\r\n\r\n//   const updateTransaction = (updated) => {\r\n//     setTransactions(\r\n//       transactions.map((t) => (t.id === updated.id ? updated : t))\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <FinanceContext.Provider\r\n//       value={{\r\n//         transactions,\r\n//         addTransaction,\r\n//         deleteTransaction,\r\n//         updateTransaction,\r\n//       }}\r\n//     >\r\n//       {children}\r\n//     </FinanceContext.Provider>\r\n//   );\r\n// };\r\n\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Create a context for finance data\r\nconst FinanceContext = createContext();\r\n\r\n// Create a provider component\r\nexport const FinanceProvider = ({ children }) => {\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const storedTransactions = localStorage.getItem('transactions');\r\n    if (storedTransactions) {\r\n      setTransactions(JSON.parse(storedTransactions));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <FinanceContext.Provider value={{ transactions, setTransactions }}>\r\n      {children}\r\n    </FinanceContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the FinanceContext\r\nexport const useFinance = () => {\r\n  return useContext(FinanceContext);\r\n};"],"mappings":";;;AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;;AAEtC;AACA,OAAO,MAAMO,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMS,kBAAkB,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC/D,IAAIF,kBAAkB,EAAE;MACtBD,eAAe,CAACI,IAAI,CAACC,KAAK,CAACJ,kBAAkB,CAAC,CAAC;IACjD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACC,cAAc,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAER,YAAY;MAAEC;IAAgB,CAAE;IAAAH,QAAA,EAC/DA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;;AAED;AAAAb,EAAA,CAjBaF,eAAe;AAAAgB,EAAA,GAAfhB,eAAe;AAkB5B,OAAO,MAAMiB,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC9B,OAAOxB,UAAU,CAACK,cAAc,CAAC;AACnC,CAAC;AAACmB,GAAA,CAFWD,UAAU;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}